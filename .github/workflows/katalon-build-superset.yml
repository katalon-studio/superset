name: "[CICD] Superset"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Manual environment to run (qa | staging | prod)"
        required: true
        type: string
      git_ref:
        required: true
        description: The git reference to checkout prior to running the docker build
  push:
    branches:
      - main
      - master
      - release
      - 3.1.0.katalon

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

env:
  SERVICE_NAME: superset
  SERVICE_PATH: '.'

jobs:
  set_env:
    runs-on: ubuntu-latest
    name: Set Environment
    steps:
      - name: Set environment base on branch
        id: set_env
        run: |
          if [[ ${{ github.ref_name }} == 'main' || ${{ github.ref_name }} == '3.1.0.katalon' ]]; then
            echo "ENV=qa" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref_name }} == 'release' ]]; then
            echo "ENV=staging" >> $GITHUB_OUTPUT
          fi
    outputs:
      ENV: ${{ inputs.environment || steps.set_env.outputs.ENV }}

  build_image:
    runs-on: self-hosted-superset
    needs: [set_env]
    name: Build Image
    environment: ${{ needs.set_env.outputs.ENV }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ inputs.git_ref || '' }}
      ### Set additional vars
      - name: Set additional vars
        id: set_outputs
        run: |
          SHA_SHORT=$(git rev-parse --short HEAD)
          IMAGE_REGISTRY="${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com"
          IMAGE_REPO="${{ env.SERVICE_NAME }}"
          IMAGE_VERSION="${{ github.ref_name }}-${SHA_SHORT}-${{ vars.IMAGE_ARCH }}"
          IMAGE_TAG="${IMAGE_REGISTRY}/${IMAGE_REPO}:${IMAGE_VERSION}"
          echo "IMAGE_VERSION=${IMAGE_VERSION}" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT
      - name: Set up QEMU dependency
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Context for Buildx
        shell: bash
        run: |
          docker context create builders
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          endpoint: builders
      ### AWS Config
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/katalon-github-oidc-federation
          role-session-name: github-actions
          aws-region: ${{ vars.AWS_REGION }}
          mask-aws-account-id: 'no'
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Push Image
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.SERVICE_PATH }}
          file: Dockerfile
          push: true
          tags: ${{ steps.set_outputs.outputs.IMAGE_TAG }}
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/${{ vars.IMAGE_ARCH }},
          build-args: |
            "GH_TOKEN=${{ secrets.GH_TOKEN }}"
    outputs:
      IMAGE_VERSION: ${{ steps.set_outputs.outputs.IMAGE_VERSION }}

  deploy:
    runs-on: ubuntu-latest
    needs: [set_env, build_image]
    name: Deploy to ${{ needs.set_env.outputs.ENV }} GitOps
    environment: ${{ needs.set_env.outputs.ENV }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ vars.GITOPS_REPO }}
          token: ${{ secrets.GH_TOKEN }}

      - name: Update Image using YQ
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '${{ vars.GITOPS_YAML_PATH }} = "${{ needs.build_image.outputs.IMAGE_VERSION }}"' ${{ vars.GITOPS_FILE_PATH }}

      - name: Deploy to GitOps 
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ArgoCD - Update image for ${{ env.SERVICE_NAME }}
          # Optional commit user and author settings
          commit_user_name: github-cloudops-bot # defaults to "github-actions[bot]"
          commit_user_email: github-cloudops-bot@katalon.com # defaults to "41898282+github-actions[bot]@users.noreply.github.com"
          commit_author: Author <github-cloudops-bot@katalon.com> # defaults to author of the commit that triggered the run 
